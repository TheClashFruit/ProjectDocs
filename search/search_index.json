{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"hi","title":"Home"},{"location":"JSLogUtils/","text":"JSLogUtils A library that makes logging look better! Installion Install the library: $ npm install jslogutils # or $ yarn add jslogutils Import the library: const JSLogUtils = require ( 'JSLogUtils' ); const logger = new JSLogUtils (); Examples Simple logging: logger . error ( 'error' ); logger . debug ( 'debug' ); logger . info ( 'info' ); logger . warning ( 'warning' ); Logging with prefix: logger . setPrefix ( JSLogUtils . PREFIX . ERROR , '[ERROR]' ); logger . setPrefix ( JSLogUtils . PREFIX . DEBUG , '[DEBUG]' ); logger . setPrefix ( JSLogUtils . PREFIX . INFO , '[INFO]' ); logger . setPrefix ( JSLogUtils . PREFIX . WARNING , '[WARNING]' );","title":"JSLogUtils"},{"location":"JSLogUtils/#jslogutils","text":"A library that makes logging look better!","title":"JSLogUtils"},{"location":"JSLogUtils/#installion","text":"Install the library: $ npm install jslogutils # or $ yarn add jslogutils Import the library: const JSLogUtils = require ( 'JSLogUtils' ); const logger = new JSLogUtils ();","title":"Installion"},{"location":"JSLogUtils/#examples","text":"Simple logging: logger . error ( 'error' ); logger . debug ( 'debug' ); logger . info ( 'info' ); logger . warning ( 'warning' ); Logging with prefix: logger . setPrefix ( JSLogUtils . PREFIX . ERROR , '[ERROR]' ); logger . setPrefix ( JSLogUtils . PREFIX . DEBUG , '[DEBUG]' ); logger . setPrefix ( JSLogUtils . PREFIX . INFO , '[INFO]' ); logger . setPrefix ( JSLogUtils . PREFIX . WARNING , '[WARNING]' );","title":"Examples"},{"location":"kvantum-messenger/","text":"Kvantum Messenger","title":"Kvantum Messenger"},{"location":"kvantum-messenger/#kvantum-messenger","text":"","title":"Kvantum Messenger"},{"location":"sketchub.js/","text":"Sketchub.js An easier way to use Sketchub's api in JavaScript or TypeScript. Getting Started Installation With NPM: npm i sketchub.js With Yarn: yarn add sketchub.js Adding Sketchub.js const { Sketchub } = require ( 'sketchub.js' ); const apiClient = new Sketchub (); apiClient . setApiKey ( process . env . API_KEY ); Making api calls apiClient . getCategories (( response ) => { console . log ( response ); }); apiClient . getProjectTypes (( response ) => { console . log ( response ); }); apiClient . getProjectDetails ( 1 , ( response ) => { console . log ( response ); }); apiClient . getProjectList ( 1 , ( response ) => { console . log ( response ); }); apiClient . findUserName ( 'Amitoj' , ( response ) => { console . log ( response ); }); apiClient . getUser ( '412' , ( response ) => { console . log ( response ); }); apiClient . getAnnouncements (( response ) => { console . log ( response ); }); apiClient . getMeta (( response ) => { console . log ( response ); }); // OR const getProjectTypes = await apiClient . getProjectTypes (); const getProjectDetails = await apiClient . getProjectDetails ( 1 ); const getProjectList = await apiClient . getProjectList ( 1 ); const findUserName = await apiClient . findUserName ( 'Amitoj' ); const getUser = await apiClient . getUser ( '412' ); const getAnnouncements = await apiClient . getAnnouncements (); const getMeta = await apiClient . getMeta (); console . log ( getProjectTypes ); console . log ( getProjectDetails ); console . log ( getProjectList ); console . log ( findUserName ); console . log ( getUser ); console . log ( getAnnouncements ); console . log ( getMeta );","title":"Sketchub.js"},{"location":"sketchub.js/#sketchubjs","text":"An easier way to use Sketchub's api in JavaScript or TypeScript.","title":"Sketchub.js"},{"location":"sketchub.js/#getting-started","text":"","title":"Getting Started"},{"location":"sketchub.js/#installation","text":"With NPM: npm i sketchub.js With Yarn: yarn add sketchub.js","title":"Installation"},{"location":"sketchub.js/#adding-sketchubjs","text":"const { Sketchub } = require ( 'sketchub.js' ); const apiClient = new Sketchub (); apiClient . setApiKey ( process . env . API_KEY );","title":"Adding Sketchub.js"},{"location":"sketchub.js/#making-api-calls","text":"apiClient . getCategories (( response ) => { console . log ( response ); }); apiClient . getProjectTypes (( response ) => { console . log ( response ); }); apiClient . getProjectDetails ( 1 , ( response ) => { console . log ( response ); }); apiClient . getProjectList ( 1 , ( response ) => { console . log ( response ); }); apiClient . findUserName ( 'Amitoj' , ( response ) => { console . log ( response ); }); apiClient . getUser ( '412' , ( response ) => { console . log ( response ); }); apiClient . getAnnouncements (( response ) => { console . log ( response ); }); apiClient . getMeta (( response ) => { console . log ( response ); }); // OR const getProjectTypes = await apiClient . getProjectTypes (); const getProjectDetails = await apiClient . getProjectDetails ( 1 ); const getProjectList = await apiClient . getProjectList ( 1 ); const findUserName = await apiClient . findUserName ( 'Amitoj' ); const getUser = await apiClient . getUser ( '412' ); const getAnnouncements = await apiClient . getAnnouncements (); const getMeta = await apiClient . getMeta (); console . log ( getProjectTypes ); console . log ( getProjectDetails ); console . log ( getProjectList ); console . log ( findUserName ); console . log ( getUser ); console . log ( getAnnouncements ); console . log ( getMeta );","title":"Making api calls"},{"location":"woid/","text":"Woid Woid is a cross-platform Android IDE for both Android and Desktop. Woid aims to be a fully fledged IDE with gradle support, auto completion. Compiling You can just clone the repository and open it in Android Studio and clicking run. Cloning the repository: git clone https://github.com/WoidIDE/WoidAndroid.git Contributing Please view CONTRIBUTING.md . Community Discord: discord.gg/EfGRGUtcJ7 Twitter: @WoidIDE License This project is licensed under the GNU GPLv3 LICENSE , check the LICENSE file for details. Woid Copyright (C) 2022 TheClashFruit This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'. This is free software, and you are welcome to redistribute it under certain conditions; type `show c' for details.","title":"Woid"},{"location":"woid/#woid","text":"Woid is a cross-platform Android IDE for both Android and Desktop. Woid aims to be a fully fledged IDE with gradle support, auto completion.","title":"Woid"},{"location":"woid/#compiling","text":"You can just clone the repository and open it in Android Studio and clicking run. Cloning the repository: git clone https://github.com/WoidIDE/WoidAndroid.git","title":"Compiling"},{"location":"woid/#contributing","text":"Please view CONTRIBUTING.md .","title":"Contributing"},{"location":"woid/#community","text":"Discord: discord.gg/EfGRGUtcJ7 Twitter: @WoidIDE","title":"Community"},{"location":"woid/#license","text":"This project is licensed under the GNU GPLv3 LICENSE , check the LICENSE file for details. Woid Copyright (C) 2022 TheClashFruit This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'. This is free software, and you are welcome to redistribute it under certain conditions; type `show c' for details.","title":"License"},{"location":"woid/about/","text":"","title":"About"}]}